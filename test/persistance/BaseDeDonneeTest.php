<?php

/**
 * Generated by PHPUnit_SkeletonGenerator on 2015-12-15 at 16:29:12.
 */
require_once '/../../persistance/BaseDeDonnee.php';
class BaseDeDonneeTest extends PHPUnit_Framework_TestCase {

    /**
     * @var BaseDeDonnee
     */
    private $baseDeDonnee;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     * @covers BaseDeDonnee::__construct()
     */
    public function setUp() {
        //BD
        global $host,$base,$login,$mdp;
        $host="mysql:host=localhost;";
        $base="dbname=vsi";
        $login="root";
        $mdp="";
        
        $this->baseDeDonnee = BaseDeDonnee::getInstance();
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown() {
        
    }

 
    
    /**
     * @covers BaseDeDonnee::getInstance
     * @todo   Implement testGetInstance().
     */
    public function testGetInstance() {
        $this->assertInstanceOf('BaseDeDonnee', $this->baseDeDonnee->getInstance());
    }

    /**
     * @covers BaseDeDonnee::prepareEtExecuteRequete
     * @covers BaseDeDonnee::getResultat
     * @covers BaseDeDonnee::getRequete()
     * @covers BaseDeDonnee::detruireResultatRequete()
     * @todo   Implement testPrepareEtExecuteRequete().
     */
    public function testPrepareEtExecuteRequete() {
        $id ="dbd7790bcd";
        //$this->baseDeDonnee = $this->baseDeDonnee->getInstance();
        $requete = "SELECT id FROM rssfeed where id = ?";
        $param = array('1'=>array($id,PDO::PARAM_STR));
        $this->baseDeDonnee->prepareEtExecuteRequete($requete, $param);
        $resultat= $this->baseDeDonnee->getResultat();        
        $this->assertEquals($resultat[0]['id'],$id);
        $this->baseDeDonnee->detruireResultatRequete();
        $this->assertNull($this->baseDeDonnee->getRequete());
    }


}
